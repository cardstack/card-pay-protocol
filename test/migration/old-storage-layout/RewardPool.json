{
  "storage": [
    {
      "astId": 4131,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "initialized",
      "offset": 0,
      "slot": "0",
      "type": "t_bool"
    },
    {
      "astId": 4133,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "initializing",
      "offset": 1,
      "slot": "0",
      "type": "t_bool"
    },
    {
      "astId": 4195,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "______gap",
      "offset": 0,
      "slot": "1",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 13407,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "____gap",
      "offset": 0,
      "slot": "51",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 3121,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "_owner",
      "offset": 0,
      "slot": "101",
      "type": "t_address"
    },
    {
      "astId": 3234,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "______gap",
      "offset": 0,
      "slot": "102",
      "type": "t_array(t_uint256)50_storage"
    },
    {
      "astId": 9297,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "tally",
      "offset": 0,
      "slot": "152",
      "type": "t_address"
    },
    {
      "astId": 9299,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "rewardManager",
      "offset": 0,
      "slot": "153",
      "type": "t_address"
    },
    {
      "astId": 9301,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "tokenManager",
      "offset": 0,
      "slot": "154",
      "type": "t_address"
    },
    {
      "astId": 9305,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "rewardsClaimed",
      "offset": 0,
      "slot": "155",
      "type": "t_mapping(t_bytes32,t_bool)"
    },
    {
      "astId": 9311,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "payeeRoots",
      "offset": 0,
      "slot": "156",
      "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))"
    },
    {
      "astId": 9317,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "rewardBalance",
      "offset": 0,
      "slot": "157",
      "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
    },
    {
      "astId": 9319,
      "contract": "contracts/RewardPool.sol:RewardPool",
      "label": "versionManager",
      "offset": 0,
      "slot": "158",
      "type": "t_address"
    }
  ],
  "types": {
    "t_address": {
      "encoding": "inplace",
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_array(t_uint256)50_storage": {
      "base": "t_uint256",
      "encoding": "inplace",
      "label": "uint256[50]",
      "numberOfBytes": "1600"
    },
    "t_bool": {
      "encoding": "inplace",
      "label": "bool",
      "numberOfBytes": "1"
    },
    "t_bytes32": {
      "encoding": "inplace",
      "label": "bytes32",
      "numberOfBytes": "32"
    },
    "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => mapping(address => uint256))",
      "numberOfBytes": "32",
      "value": "t_mapping(t_address,t_uint256)"
    },
    "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => mapping(uint256 => bytes32))",
      "numberOfBytes": "32",
      "value": "t_mapping(t_uint256,t_bytes32)"
    },
    "t_mapping(t_address,t_uint256)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_mapping(t_bytes32,t_bool)": {
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => bool)",
      "numberOfBytes": "32",
      "value": "t_bool"
    },
    "t_mapping(t_uint256,t_bytes32)": {
      "encoding": "mapping",
      "key": "t_uint256",
      "label": "mapping(uint256 => bytes32)",
      "numberOfBytes": "32",
      "value": "t_bytes32"
    },
    "t_uint256": {
      "encoding": "inplace",
      "label": "uint256",
      "numberOfBytes": "32"
    }
  }
}