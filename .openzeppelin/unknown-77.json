{
  "manifestVersion": "3.1",
  "impls": {
    "922c0d29eca7957807561953da205826b626632c6d458b054a22097d5c98ecbc": {
      "address": "0x9291A572BA1C5dd6AC0EB06f2C0EB055bEc28d31",
      "txHash": "0x196c6b4becf2d8a7f43fe02c95aae9c3baf0d07642e537e085e71846027d0eaf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)8437_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "revenuePool",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:48"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeReceiver",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:49"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "cardDetails",
            "type": "t_mapping(t_address,t_struct(CardDetail)349_storage)",
            "src": "PrepaidCardManager.sol:50"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeInCARD",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "maximumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:52"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "minimumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:53"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasToken",
            "type": "t_address",
            "src": "PrepaidCardManager.sol:54"
          }
        ],
        "types": {
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(CardDetail)349_storage)": {
            "label": "mapping(address => struct PrepaidCardManager.CardDetail)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(CardDetail)349_storage": {
            "label": "struct PrepaidCardManager.CardDetail",
            "members": [
              {
                "label": "issuer",
                "type": "t_address"
              },
              {
                "label": "issueToken",
                "type": "t_address"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "customizationDID",
                "type": "t_string_storage"
              },
              {
                "label": "reloadable",
                "type": "t_bool"
              },
              {
                "label": "canPayNonMerchants",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)8437_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "136bfe7af691924750c2db89bdda212388cf53be38bb9d2593fc4f92528cf4a3": {
      "address": "0x7d52eb30a6a8cD49c763816E1DA6c9E9E91be40E",
      "txHash": "0xfc3e04ef5e0a94c22eda356937cb448f3ff7730dac280d397e8eb9ca3154f38d",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "MerchantManager",
            "label": "merchantSafes",
            "type": "t_mapping(t_address,t_struct(MerchantSafe)2432_storage)",
            "src": "core/MerchantManager.sol:29"
          },
          {
            "contract": "MerchantManager",
            "label": "merchants",
            "type": "t_mapping(t_address,t_struct(Merchant)2437_storage)",
            "src": "core/MerchantManager.sol:30"
          },
          {
            "contract": "MerchantManager",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/MerchantManager.sol:72"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)8437_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Exchange",
            "label": "exchanges",
            "type": "t_mapping(t_bytes32,t_struct(ExchangeInfo)2068_storage)",
            "src": "core/Exchange.sol:20"
          },
          {
            "contract": "Exchange",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Exchange.sol:133"
          },
          {
            "contract": "RevenuePool",
            "label": "spendToken",
            "type": "t_address",
            "src": "RevenuePool.sol:19"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeeReceiver",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:20"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeePercentage",
            "type": "t_uint256",
            "src": "RevenuePool.sol:21"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantRegistrationFeeInSPEND",
            "type": "t_uint256",
            "src": "RevenuePool.sol:22"
          },
          {
            "contract": "RevenuePool",
            "label": "prepaidCardManager",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(ExchangeInfo)2068_storage)": {
            "label": "mapping(bytes32 => struct Exchange.ExchangeInfo)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ExchangeInfo)2068_storage": {
            "label": "struct Exchange.ExchangeInfo",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "feed",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)8437_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(MerchantSafe)2432_storage)": {
            "label": "mapping(address => struct MerchantManager.MerchantSafe)"
          },
          "t_struct(MerchantSafe)2432_storage": {
            "label": "struct MerchantManager.MerchantSafe",
            "members": [
              {
                "label": "register",
                "type": "t_bool"
              },
              {
                "label": "merchant",
                "type": "t_address"
              },
              {
                "label": "tokens",
                "type": "t_struct(AddressSet)8437_storage"
              },
              {
                "label": "balance",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Merchant)2437_storage)": {
            "label": "mapping(address => struct MerchantManager.Merchant)"
          },
          "t_struct(Merchant)2437_storage": {
            "label": "struct MerchantManager.Merchant",
            "members": [
              {
                "label": "merchantSafe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          }
        }
      }
    },
    "e5db20086119d2d9b1ff08571da9883a45ef95ab185888f22e68cb581545b87c": {
      "address": "0x990511dC25AEF618960b89c0Cd57667B28FB6B76",
      "txHash": "0xb6ce84f15b7fa636018e8bcd66f4399fcf4fc0aed9b1502a371b635fcdfe08e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "BridgeUtils",
            "label": "suppliers",
            "type": "t_mapping(t_address,t_struct(Supplier)37_storage)",
            "src": "BridgeUtils.sol:21"
          },
          {
            "contract": "BridgeUtils",
            "label": "revenuePool",
            "type": "t_address",
            "src": "BridgeUtils.sol:23"
          },
          {
            "contract": "BridgeUtils",
            "label": "prepaidCardManager",
            "type": "t_address",
            "src": "BridgeUtils.sol:24"
          },
          {
            "contract": "BridgeUtils",
            "label": "bridgeMediator",
            "type": "t_address",
            "src": "BridgeUtils.sol:25"
          },
          {
            "contract": "BridgeUtils",
            "label": "safes",
            "type": "t_mapping(t_address,t_address)",
            "src": "BridgeUtils.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Supplier)37_storage)": {
            "label": "mapping(address => struct BridgeUtils.Supplier)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Supplier)37_storage": {
            "label": "struct BridgeUtils.Supplier",
            "members": [
              {
                "label": "registered",
                "type": "t_bool"
              },
              {
                "label": "safe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "cffbfab3eaf5471c95352787a2919b2c32f077d378c4873b15b3ead1624a9171": {
      "address": "0x6C347EF9C7be0450e8ad50b24e93A36EEedfa40e",
      "txHash": "0x9dd9742f0fbedf3817e9263e2bd0f318434abd06d3e0ab619b842c588838d97c",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "minter",
            "type": "t_struct(AddressSet)8437_storage",
            "src": "roles/SPENDMinterRole.sol:10"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "_owner",
            "type": "t_address",
            "src": "roles/SPENDMinterRole.sol:11"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/SPENDMinterRole.sol:111"
          },
          {
            "contract": "SPEND",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "token/SPEND.sol:13"
          },
          {
            "contract": "SPEND",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "token/SPEND.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)8437_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bbcfb374ff6b4576c90e269eaba3f45f205f2a10df8c2591d62ef05950e2cca7": {
      "address": "0xDA0Da3053D7f7c201f41f82caCb1a84A7B7765ef",
      "txHash": "0x889a18cfd8aa28c4e309865d00150bf554a59dee5e2ba39abd2a44b9c1c05609",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "tokenUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:11"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "ethUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:12"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "198d5b7dfb5f670569e51b903ef47af8e01f388b00ffc31e69419bb24c78b07f": {
      "address": "0x4fBceca0864e66e859f5A5b2981464f2b98e9Ca9",
      "txHash": "0xefd7231f5793604993b2afc30fc9af5357938ef0e6af03759e1a703d112e0687",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "oracle",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:14"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "tokenSymbol",
            "type": "t_string_storage",
            "src": "oracles/DIAOracleAdapter.sol:15"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4a08584a5d22ddcb6a239c54ee62b2837e1fa50e0d9160836094b53f821d84df": {
      "address": "0xD0D6E37B70B38e466cfbe4627bd7B98536E18582",
      "txHash": "0xac7251003dfc1de7eb3699914574d8cf8dd5fa8198e005688d4b418228d5045f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "OwnableMixin",
            "label": "_owner",
            "type": "t_address",
            "src": "roles/OwnableMixin.sol:20"
          },
          {
            "contract": "OwnableMixin",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/OwnableMixin.sol:86"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ManualFeed",
            "label": "_description",
            "type": "t_string_storage",
            "src": "oracles/ManualFeed.sol:16"
          },
          {
            "contract": "ManualFeed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "oracles/ManualFeed.sol:17"
          },
          {
            "contract": "ManualFeed",
            "label": "_currentRound",
            "type": "t_uint80",
            "src": "oracles/ManualFeed.sol:18"
          },
          {
            "contract": "ManualFeed",
            "label": "rounds",
            "type": "t_mapping(t_uint80,t_struct(RoundData)3475_storage)",
            "src": "oracles/ManualFeed.sol:20"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint80,t_struct(RoundData)3475_storage)": {
            "label": "mapping(uint80 => struct ManualFeed.RoundData)"
          },
          "t_struct(RoundData)3475_storage": {
            "label": "struct ManualFeed.RoundData",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "price",
                "type": "t_int256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "a0d7d5a7d3313e847154198a1c7595fb0e9774cde6c3a0c3c13f80dd24679d84": {
      "address": "0x8A4D2BF34c4f4CCf99bA2cA7E0d6502346420217",
      "txHash": "0x01a7bd90402ee71ab6ca51fed17b7cdb5cbdf87a0bc0e3a24eaa4ae3a71ba766",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)8444_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "revenuePool",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:48"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeReceiver",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:49"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "cardDetails",
            "type": "t_mapping(t_address,t_struct(CardDetail)349_storage)",
            "src": "PrepaidCardManager.sol:50"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeInCARD",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "maximumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:52"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "minimumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:53"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasToken",
            "type": "t_address",
            "src": "PrepaidCardManager.sol:54"
          }
        ],
        "types": {
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(CardDetail)349_storage)": {
            "label": "mapping(address => struct PrepaidCardManager.CardDetail)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(CardDetail)349_storage": {
            "label": "struct PrepaidCardManager.CardDetail",
            "members": [
              {
                "label": "issuer",
                "type": "t_address"
              },
              {
                "label": "issueToken",
                "type": "t_address"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "customizationDID",
                "type": "t_string_storage"
              },
              {
                "label": "reloadable",
                "type": "t_bool"
              },
              {
                "label": "canPayNonMerchants",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)8444_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "a2cfde5abde37ca95cdc49700637829957f31282982e45abeee59c9bdf9b5bef": {
      "address": "0x4Ad294e010E16bece7ca7786AB34EBd416b2a518",
      "txHash": "0x245f68f36c229d6627f67b31a1d5982c363424a5a7ffc385e60cd0c20af3d52b",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "MerchantManager",
            "label": "merchantSafes",
            "type": "t_mapping(t_address,t_struct(MerchantSafe)2432_storage)",
            "src": "core/MerchantManager.sol:29"
          },
          {
            "contract": "MerchantManager",
            "label": "merchants",
            "type": "t_mapping(t_address,t_struct(Merchant)2437_storage)",
            "src": "core/MerchantManager.sol:30"
          },
          {
            "contract": "MerchantManager",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/MerchantManager.sol:74"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)8444_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Exchange",
            "label": "exchanges",
            "type": "t_mapping(t_bytes32,t_struct(ExchangeInfo)2068_storage)",
            "src": "core/Exchange.sol:20"
          },
          {
            "contract": "Exchange",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Exchange.sol:133"
          },
          {
            "contract": "RevenuePool",
            "label": "spendToken",
            "type": "t_address",
            "src": "RevenuePool.sol:19"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeeReceiver",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:20"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeePercentage",
            "type": "t_uint256",
            "src": "RevenuePool.sol:21"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantRegistrationFeeInSPEND",
            "type": "t_uint256",
            "src": "RevenuePool.sol:22"
          },
          {
            "contract": "RevenuePool",
            "label": "prepaidCardManager",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(ExchangeInfo)2068_storage)": {
            "label": "mapping(bytes32 => struct Exchange.ExchangeInfo)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ExchangeInfo)2068_storage": {
            "label": "struct Exchange.ExchangeInfo",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "feed",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)8444_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(MerchantSafe)2432_storage)": {
            "label": "mapping(address => struct MerchantManager.MerchantSafe)"
          },
          "t_struct(MerchantSafe)2432_storage": {
            "label": "struct MerchantManager.MerchantSafe",
            "members": [
              {
                "label": "register",
                "type": "t_bool"
              },
              {
                "label": "merchant",
                "type": "t_address"
              },
              {
                "label": "tokens",
                "type": "t_struct(AddressSet)8444_storage"
              },
              {
                "label": "balance",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Merchant)2437_storage)": {
            "label": "mapping(address => struct MerchantManager.Merchant)"
          },
          "t_struct(Merchant)2437_storage": {
            "label": "struct MerchantManager.Merchant",
            "members": [
              {
                "label": "merchantSafe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          }
        }
      }
    },
    "64a479d771125c5dfe703235ac361f2e436d0be97d13d565a396a2450512b551": {
      "address": "0x71fbdbEeD88Da8966f2FAC85B9B9ebA300BAaB2B",
      "txHash": "0x547abfbb08698074cdfb3927a42a54171d2b734f3971e31a5a2b542e45abba90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "BridgeUtils",
            "label": "suppliers",
            "type": "t_mapping(t_address,t_struct(Supplier)37_storage)",
            "src": "BridgeUtils.sol:21"
          },
          {
            "contract": "BridgeUtils",
            "label": "revenuePool",
            "type": "t_address",
            "src": "BridgeUtils.sol:23"
          },
          {
            "contract": "BridgeUtils",
            "label": "prepaidCardManager",
            "type": "t_address",
            "src": "BridgeUtils.sol:24"
          },
          {
            "contract": "BridgeUtils",
            "label": "bridgeMediator",
            "type": "t_address",
            "src": "BridgeUtils.sol:25"
          },
          {
            "contract": "BridgeUtils",
            "label": "safes",
            "type": "t_mapping(t_address,t_address)",
            "src": "BridgeUtils.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Supplier)37_storage)": {
            "label": "mapping(address => struct BridgeUtils.Supplier)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Supplier)37_storage": {
            "label": "struct BridgeUtils.Supplier",
            "members": [
              {
                "label": "registered",
                "type": "t_bool"
              },
              {
                "label": "safe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "7ba6161a03ca8eb7689ae4497577378d00428024722b315c5c97e74fa24c9ec4": {
      "address": "0x42650fbbd1b43cCD9886284E7a8850d482172aB7",
      "txHash": "0xc44a597009433295941b871ede031083d5f357318eb7d678ac9ea7c493c66b13",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "minter",
            "type": "t_struct(AddressSet)8444_storage",
            "src": "roles/SPENDMinterRole.sol:10"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "_owner",
            "type": "t_address",
            "src": "roles/SPENDMinterRole.sol:11"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/SPENDMinterRole.sol:111"
          },
          {
            "contract": "SPEND",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "token/SPEND.sol:13"
          },
          {
            "contract": "SPEND",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "token/SPEND.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)8444_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5ad32d7bd670afe355bf225e733972e20b308cb4001a64e0051acb998b594567": {
      "address": "0x8E58c9f5053a9770C53827CD82525199972B52D9",
      "txHash": "0xe8c78971636297b856e026a6ae7895894a95da7cd96f668ac92fce9e5492465c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "tokenUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:11"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "ethUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:12"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e5c3a1ff88c2d6a3d007bc802535678aa5ba6ccddd422304f3f4318eb92e4e25": {
      "address": "0x69Bdf554f18Fe668f2ceEF53129D998b3C4516E8",
      "txHash": "0xb247ef6577cc9fbb1f1a2e1f7ea6ebe7cb087f11d128da06fa59c15c69f13b25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "oracle",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:14"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "tokenSymbol",
            "type": "t_string_storage",
            "src": "oracles/DIAOracleAdapter.sol:15"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1ed52834f81e5f471e37b552e28a1434632733c4d4f5d37874d187df7d8bc182": {
      "address": "0x6FaEF87C89e7B2c00A46b7E0a432f7D4B3287B9c",
      "txHash": "0xeac06827c9cfe5a18d0b719052f3649f87785c69a96355b092ed548b6ed58d6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "OwnableMixin",
            "label": "_owner",
            "type": "t_address",
            "src": "roles/OwnableMixin.sol:20"
          },
          {
            "contract": "OwnableMixin",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/OwnableMixin.sol:86"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ManualFeed",
            "label": "_description",
            "type": "t_string_storage",
            "src": "oracles/ManualFeed.sol:16"
          },
          {
            "contract": "ManualFeed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "oracles/ManualFeed.sol:17"
          },
          {
            "contract": "ManualFeed",
            "label": "_currentRound",
            "type": "t_uint80",
            "src": "oracles/ManualFeed.sol:18"
          },
          {
            "contract": "ManualFeed",
            "label": "rounds",
            "type": "t_mapping(t_uint80,t_struct(RoundData)3482_storage)",
            "src": "oracles/ManualFeed.sol:20"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint80,t_struct(RoundData)3482_storage)": {
            "label": "mapping(uint80 => struct ManualFeed.RoundData)"
          },
          "t_struct(RoundData)3482_storage": {
            "label": "struct ManualFeed.RoundData",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "price",
                "type": "t_int256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "656b3012c47fc67ec8c261371614d60fbffa3e2c32673d8634c3a5c4fc361fc8": {
      "address": "0xb58Cc25Abe344ddf929e3E4fA8589472EF9587eC",
      "txHash": "0xa04a21e9e4e835f09ffceea819fd868d2fa11aac412c519ff7bfbbeb825e6447",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)8493_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "revenuePool",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:48"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeReceiver",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:49"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "cardDetails",
            "type": "t_mapping(t_address,t_struct(CardDetail)349_storage)",
            "src": "PrepaidCardManager.sol:50"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeInCARD",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "maximumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:52"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "minimumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:53"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasToken",
            "type": "t_address",
            "src": "PrepaidCardManager.sol:54"
          }
        ],
        "types": {
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(CardDetail)349_storage)": {
            "label": "mapping(address => struct PrepaidCardManager.CardDetail)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(CardDetail)349_storage": {
            "label": "struct PrepaidCardManager.CardDetail",
            "members": [
              {
                "label": "issuer",
                "type": "t_address"
              },
              {
                "label": "issueToken",
                "type": "t_address"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "customizationDID",
                "type": "t_string_storage"
              },
              {
                "label": "reloadable",
                "type": "t_bool"
              },
              {
                "label": "canPayNonMerchants",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)8493_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "1c6a9dd410a24cde538324c95a2f6c61bf1de97a670b1e8c59f29f4846e3edf5": {
      "address": "0xA3c9301aadDa8986d29Aa30d27F4D0ADA6A26298",
      "txHash": "0x233200bc219315ec33cca97019b1fa39e6c363d0311ab6b34fe7785be20822a1",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "MerchantManager",
            "label": "merchantSafes",
            "type": "t_mapping(t_address,t_struct(MerchantSafe)2604_storage)",
            "src": "core/MerchantManager.sol:29"
          },
          {
            "contract": "MerchantManager",
            "label": "merchants",
            "type": "t_mapping(t_address,t_struct(Merchant)2609_storage)",
            "src": "core/MerchantManager.sol:30"
          },
          {
            "contract": "MerchantManager",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/MerchantManager.sol:74"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)8493_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Exchange",
            "label": "exchanges",
            "type": "t_mapping(t_bytes32,t_struct(ExchangeInfo)2197_storage)",
            "src": "core/Exchange.sol:20"
          },
          {
            "contract": "Exchange",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Exchange.sol:162"
          },
          {
            "contract": "RevenuePool",
            "label": "spendToken",
            "type": "t_address",
            "src": "RevenuePool.sol:19"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeeReceiver",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:20"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeePercentage",
            "type": "t_uint256",
            "src": "RevenuePool.sol:21"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantRegistrationFeeInSPEND",
            "type": "t_uint256",
            "src": "RevenuePool.sol:22"
          },
          {
            "contract": "RevenuePool",
            "label": "prepaidCardManager",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:23"
          },
          {
            "contract": "RevenuePool",
            "label": "rateDriftPercentage",
            "type": "t_uint256",
            "src": "RevenuePool.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(ExchangeInfo)2197_storage)": {
            "label": "mapping(bytes32 => struct Exchange.ExchangeInfo)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ExchangeInfo)2197_storage": {
            "label": "struct Exchange.ExchangeInfo",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "feed",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)8493_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(MerchantSafe)2604_storage)": {
            "label": "mapping(address => struct MerchantManager.MerchantSafe)"
          },
          "t_struct(MerchantSafe)2604_storage": {
            "label": "struct MerchantManager.MerchantSafe",
            "members": [
              {
                "label": "register",
                "type": "t_bool"
              },
              {
                "label": "merchant",
                "type": "t_address"
              },
              {
                "label": "tokens",
                "type": "t_struct(AddressSet)8493_storage"
              },
              {
                "label": "balance",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Merchant)2609_storage)": {
            "label": "mapping(address => struct MerchantManager.Merchant)"
          },
          "t_struct(Merchant)2609_storage": {
            "label": "struct MerchantManager.Merchant",
            "members": [
              {
                "label": "merchantSafe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          }
        }
      }
    },
    "eb94bbb2b6bd3b301e99eb7e99988a1d4a8e7a90ae4e60c6d7bf552dcc935a19": {
      "address": "0x2a9b7263c32c662f5DAA14f9204969280e45fb8C",
      "txHash": "0x64da0d7c5fbdfae95e07cc789cad0841d5f9797c5aef1596b38543a4eb3d483f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "BridgeUtils",
            "label": "suppliers",
            "type": "t_mapping(t_address,t_struct(Supplier)37_storage)",
            "src": "BridgeUtils.sol:21"
          },
          {
            "contract": "BridgeUtils",
            "label": "revenuePool",
            "type": "t_address",
            "src": "BridgeUtils.sol:23"
          },
          {
            "contract": "BridgeUtils",
            "label": "prepaidCardManager",
            "type": "t_address",
            "src": "BridgeUtils.sol:24"
          },
          {
            "contract": "BridgeUtils",
            "label": "bridgeMediator",
            "type": "t_address",
            "src": "BridgeUtils.sol:25"
          },
          {
            "contract": "BridgeUtils",
            "label": "safes",
            "type": "t_mapping(t_address,t_address)",
            "src": "BridgeUtils.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Supplier)37_storage)": {
            "label": "mapping(address => struct BridgeUtils.Supplier)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Supplier)37_storage": {
            "label": "struct BridgeUtils.Supplier",
            "members": [
              {
                "label": "registered",
                "type": "t_bool"
              },
              {
                "label": "safe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "8b27feb1053d6b706a71c6c0d919aea4c5e61d04d437238f3ade209a701ad002": {
      "address": "0x18892b2B6f4C74cABA6a641FBe48019541bBaF68",
      "txHash": "0x2be1fd5be7e44a5e992e2abf1bf13842c4ef6d9ff2a73aa29fe18489221f5403",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "minter",
            "type": "t_struct(AddressSet)8493_storage",
            "src": "roles/SPENDMinterRole.sol:10"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "_owner",
            "type": "t_address",
            "src": "roles/SPENDMinterRole.sol:11"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/SPENDMinterRole.sol:111"
          },
          {
            "contract": "SPEND",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "token/SPEND.sol:13"
          },
          {
            "contract": "SPEND",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "token/SPEND.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)8493_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "362b081eb9ce2654fa764c7ae81564b16a7acb27725b7c9ac4a6f3c5d8e6e82f": {
      "address": "0xf3D4b80bA9C7275708a6029879e63cc3F15A05D9",
      "txHash": "0x51ca7b7453f9739041f4bd76ebd21bab6c3eb3150ad6b598a4717f722b450838",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "tokenUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:11"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "ethUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:12"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5e4b8822fd8863ee4e8accb58a9b15dcf9a9aef25eff5cbe550703b8ef20c2a3": {
      "address": "0x2932BD354cBd89d6Df88cBc136f6DBb1D00bE1Fb",
      "txHash": "0x3dc5beb5161f144a4789ba21742d0cb6387ce4ec0d231272a5813df4315c9ece",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "oracle",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:14"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "tokenSymbol",
            "type": "t_string_storage",
            "src": "oracles/DIAOracleAdapter.sol:15"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "336ebb08cd220d410c7c8fe0754d0861918317900a8518cdc7a36aa713060b20": {
      "address": "0x49B19043Ca6D3254a26A63dA7F137a7D673f1325",
      "txHash": "0xc9c94c03feba5f271b02778792603e76f57348520d7e864181882184d75f6948",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ManualFeed",
            "label": "_description",
            "type": "t_string_storage",
            "src": "oracles/ManualFeed.sol:15"
          },
          {
            "contract": "ManualFeed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "oracles/ManualFeed.sol:16"
          },
          {
            "contract": "ManualFeed",
            "label": "_currentRound",
            "type": "t_uint80",
            "src": "oracles/ManualFeed.sol:17"
          },
          {
            "contract": "ManualFeed",
            "label": "rounds",
            "type": "t_mapping(t_uint80,t_struct(RoundData)3653_storage)",
            "src": "oracles/ManualFeed.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint80,t_struct(RoundData)3653_storage)": {
            "label": "mapping(uint80 => struct ManualFeed.RoundData)"
          },
          "t_struct(RoundData)3653_storage": {
            "label": "struct ManualFeed.RoundData",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "price",
                "type": "t_int256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "34e0dcab9b0eb2ba4a4ec02d956f57a8540c9b7685798be907d15eaec5e25045": {
      "address": "0x703d61Ffc7A178f02Ca5996A5Ba45E942775A329",
      "txHash": "0x18428d0a43ae58a0cde5898aea3b2129e658e37723877d9d2b4d30503e346e6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)9182_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "revenuePool",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:49"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeReceiver",
            "type": "t_address_payable",
            "src": "PrepaidCardManager.sol:50"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "cardDetails",
            "type": "t_mapping(t_address,t_struct(CardDetail)364_storage)",
            "src": "PrepaidCardManager.sol:51"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasFeeInCARD",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:52"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "maximumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:53"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "minimumFaceValue",
            "type": "t_uint256",
            "src": "PrepaidCardManager.sol:54"
          },
          {
            "contract": "PrepaidCardManager",
            "label": "gasToken",
            "type": "t_address",
            "src": "PrepaidCardManager.sol:55"
          }
        ],
        "types": {
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_struct(CardDetail)364_storage)": {
            "label": "mapping(address => struct PrepaidCardManager.CardDetail)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(CardDetail)364_storage": {
            "label": "struct PrepaidCardManager.CardDetail",
            "members": [
              {
                "label": "issuer",
                "type": "t_address"
              },
              {
                "label": "issueToken",
                "type": "t_address"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "customizationDID",
                "type": "t_string_storage"
              },
              {
                "label": "reloadable",
                "type": "t_bool"
              },
              {
                "label": "canPayNonMerchants",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)9182_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "98c4b01ddc8b4ce332291cb1b1cf4cafc6225c7256f97151311d146b91510742": {
      "address": "0xF255BABc8f3f941AD89Aa70A9c000c4Dd29021F6",
      "txHash": "0x25dd83ed8fbb19b5492985c9db1f15c815e64a54ab9a50760d335a4e8a005568",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "MerchantManager",
            "label": "merchantSafes",
            "type": "t_mapping(t_address,t_struct(MerchantSafe)3226_storage)",
            "src": "core/MerchantManager.sol:29"
          },
          {
            "contract": "MerchantManager",
            "label": "merchants",
            "type": "t_mapping(t_address,t_struct(Merchant)3231_storage)",
            "src": "core/MerchantManager.sol:30"
          },
          {
            "contract": "MerchantManager",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/MerchantManager.sol:74"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)9182_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "Exchange",
            "label": "exchanges",
            "type": "t_mapping(t_bytes32,t_struct(ExchangeInfo)2819_storage)",
            "src": "core/Exchange.sol:20"
          },
          {
            "contract": "Exchange",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Exchange.sol:162"
          },
          {
            "contract": "RevenuePool",
            "label": "spendToken",
            "type": "t_address",
            "src": "RevenuePool.sol:19"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeeReceiver",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:20"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantFeePercentage",
            "type": "t_uint256",
            "src": "RevenuePool.sol:21"
          },
          {
            "contract": "RevenuePool",
            "label": "merchantRegistrationFeeInSPEND",
            "type": "t_uint256",
            "src": "RevenuePool.sol:22"
          },
          {
            "contract": "RevenuePool",
            "label": "prepaidCardManager",
            "type": "t_address_payable",
            "src": "RevenuePool.sol:23"
          },
          {
            "contract": "RevenuePool",
            "label": "rateDriftPercentage",
            "type": "t_uint256",
            "src": "RevenuePool.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(ExchangeInfo)2819_storage)": {
            "label": "mapping(bytes32 => struct Exchange.ExchangeInfo)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(ExchangeInfo)2819_storage": {
            "label": "struct Exchange.ExchangeInfo",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "feed",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(AddressSet)9182_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(MerchantSafe)3226_storage)": {
            "label": "mapping(address => struct MerchantManager.MerchantSafe)"
          },
          "t_struct(MerchantSafe)3226_storage": {
            "label": "struct MerchantManager.MerchantSafe",
            "members": [
              {
                "label": "register",
                "type": "t_bool"
              },
              {
                "label": "merchant",
                "type": "t_address"
              },
              {
                "label": "tokens",
                "type": "t_struct(AddressSet)9182_storage"
              },
              {
                "label": "balance",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Merchant)3231_storage)": {
            "label": "mapping(address => struct MerchantManager.Merchant)"
          },
          "t_struct(Merchant)3231_storage": {
            "label": "struct MerchantManager.Merchant",
            "members": [
              {
                "label": "merchantSafe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          }
        }
      }
    },
    "8dafdbe9a64c36d52b9ed47d8f59cd4adac51846ad94b46ba35171ab13b776c3": {
      "address": "0x27D9B5F9be7FbC9113184cFBdDcD9E61ae8b64a0",
      "txHash": "0xaf9728c491272d3aa04f0eb4b0d52da9ab47225b5f0677aea1d92bfb525527ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Safe",
            "label": "gnosisSafe",
            "type": "t_address",
            "src": "core/Safe.sol:9"
          },
          {
            "contract": "Safe",
            "label": "gnosisProxyFactory",
            "type": "t_address",
            "src": "core/Safe.sol:10"
          },
          {
            "contract": "Safe",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Safe.sol:51"
          },
          {
            "contract": "BridgeUtils",
            "label": "suppliers",
            "type": "t_mapping(t_address,t_struct(Supplier)37_storage)",
            "src": "BridgeUtils.sol:21"
          },
          {
            "contract": "BridgeUtils",
            "label": "revenuePool",
            "type": "t_address",
            "src": "BridgeUtils.sol:23"
          },
          {
            "contract": "BridgeUtils",
            "label": "prepaidCardManager",
            "type": "t_address",
            "src": "BridgeUtils.sol:24"
          },
          {
            "contract": "BridgeUtils",
            "label": "bridgeMediator",
            "type": "t_address",
            "src": "BridgeUtils.sol:25"
          },
          {
            "contract": "BridgeUtils",
            "label": "safes",
            "type": "t_mapping(t_address,t_address)",
            "src": "BridgeUtils.sol:26"
          },
          {
            "contract": "BridgeUtils",
            "label": "rewardPool",
            "type": "t_address",
            "src": "BridgeUtils.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Supplier)37_storage)": {
            "label": "mapping(address => struct BridgeUtils.Supplier)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Supplier)37_storage": {
            "label": "struct BridgeUtils.Supplier",
            "members": [
              {
                "label": "registered",
                "type": "t_bool"
              },
              {
                "label": "safe",
                "type": "t_address"
              },
              {
                "label": "infoDID",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "d6caa42771abe5bba4f49c7bd0c0e8f43e4ff5f2b7b4d4388375990217f7f8b5": {
      "address": "0x859d9A17d9Bc2151D355C4483688F00B6b9cDA0c",
      "txHash": "0xefa7098300e1400c351156ab6dcc0995609aedcde9e0d4a891a134e0302faf48",
      "layout": {
        "storage": [
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "minter",
            "type": "t_struct(AddressSet)9182_storage",
            "src": "roles/SPENDMinterRole.sol:10"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "_owner",
            "type": "t_address",
            "src": "roles/SPENDMinterRole.sol:11"
          },
          {
            "contract": "SPENDMinterRole",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/SPENDMinterRole.sol:111"
          },
          {
            "contract": "SPEND",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "token/SPEND.sol:13"
          },
          {
            "contract": "SPEND",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "token/SPEND.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)9182_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3fa8b547c5433efb879ad027ac78f06ac3ea151388c480ce68701985028c486b": {
      "address": "0xb8322d6A1B94b92257aE9B321901166Fea223A86",
      "txHash": "0x68302d99946f64e3380e6dd3affd0cca64469c8fa514782c930a63af8a7b6ca2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "tokenUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:11"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "ethUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:12"
          },
          {
            "contract": "ChainlinkFeedAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/ChainlinkFeedAdapter.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a2033b28a6e4ca68ea6d3574cc3b56e251c6aeebdf4d83aa34c39f042455f82d": {
      "address": "0xb663777064C8A6C10d03a66714c904fc94ebce8a",
      "txHash": "0x80235e200d48fb6a691e2743aec0ced1c12b5149b329531b8bc7706aa2f0352c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "oracle",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:14"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "tokenSymbol",
            "type": "t_string_storage",
            "src": "oracles/DIAOracleAdapter.sol:15"
          },
          {
            "contract": "DIAOracleAdapter",
            "label": "daiUsdFeed",
            "type": "t_address",
            "src": "oracles/DIAOracleAdapter.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "679eb6d71eb48732f818176f1f444f22d2ecfe0f2fdda621d7335ecaaf06332c": {
      "address": "0x51a69c11e3ca98c5EdBd0D4C8e2f02C9C262D891",
      "txHash": "0x3b40f1a957af9fec29148d7c6ca745042e30ad711462f83e0107e9a6d2b8ff21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "PayableToken",
            "label": "payableTokens",
            "type": "t_struct(AddressSet)9182_storage",
            "src": "roles/PayableToken.sol:9"
          },
          {
            "contract": "PayableToken",
            "label": "bridgeUtils",
            "type": "t_address",
            "src": "roles/PayableToken.sol:10"
          },
          {
            "contract": "PayableToken",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "roles/PayableToken.sol:82"
          },
          {
            "contract": "RewardPool",
            "label": "tally",
            "type": "t_address",
            "src": "RewardPool.sol:26"
          },
          {
            "contract": "RewardPool",
            "label": "numPaymentCycles",
            "type": "t_uint256",
            "src": "RewardPool.sol:27"
          },
          {
            "contract": "RewardPool",
            "label": "currentPaymentCycleStartBlock",
            "type": "t_uint256",
            "src": "RewardPool.sol:28"
          },
          {
            "contract": "RewardPool",
            "label": "withdrawals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "RewardPool.sol:30"
          },
          {
            "contract": "RewardPool",
            "label": "payeeRoots",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "RewardPool.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)9182_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e3fdfb175f15537b382cc0cf531910cfe8a29d99881d246d8d06a96726545d4b": {
      "address": "0xE9f8EbaD0A815c88FA1aF33F8a2691a9Ac9B0652",
      "txHash": "0xdc0d50d7b748dd6c21fa25dd90ccaf25c38db427e10102acc6e32c23e9f516f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contract-upgradeable/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "Versionable",
            "label": "____gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "core/Versionable.sol:8"
          },
          {
            "contract": "ManualFeed",
            "label": "_description",
            "type": "t_string_storage",
            "src": "oracles/ManualFeed.sol:15"
          },
          {
            "contract": "ManualFeed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "oracles/ManualFeed.sol:16"
          },
          {
            "contract": "ManualFeed",
            "label": "_currentRound",
            "type": "t_uint80",
            "src": "oracles/ManualFeed.sol:17"
          },
          {
            "contract": "ManualFeed",
            "label": "rounds",
            "type": "t_mapping(t_uint80,t_struct(RoundData)4275_storage)",
            "src": "oracles/ManualFeed.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint80,t_struct(RoundData)4275_storage)": {
            "label": "mapping(uint80 => struct ManualFeed.RoundData)"
          },
          "t_struct(RoundData)4275_storage": {
            "label": "struct ManualFeed.RoundData",
            "members": [
              {
                "label": "exists",
                "type": "t_bool"
              },
              {
                "label": "price",
                "type": "t_int256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "updatedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xc2BF3d77E9c2b8cb45f9d44dB3D4a9E726671941",
    "txHash": "0xb4f2b153243f911ab79e6b550afa3569c88156ade7abe076a6a35e19fd373d4d"
  }
}
